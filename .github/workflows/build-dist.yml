name: Build and upload to PyPI

# Build on every branch push, tag push, and pull request change:
on: [push, pull_request]
# Alternatively, to publish when a (published) GitHub Release is created, use the following:
# on:
#   push:
#   pull_request:
#   release:
#     types:
#       - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          # Skip builds(save time / avoid build error)
          CIBW_SKIP: "cp36-* pp* *-musllinux_* *_i686 *-win32"
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_BUILD_FRONTEND: "build"

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

      - uses: softprops/action-gh-release@v1
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        with:
          files: ./wheelhouse/*.whl

  build_archs:
    name: Build wheels manylinux_aarch64
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_ARCHS_LINUX: aarch64
          CIBW_BUILD: cp*-manylinux_aarch64
          CIBW_SKIP: "cp36-*"
          CIBW_BUILD_FRONTEND: "build"

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

      - uses: softprops/action-gh-release@v1
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        with:
          files: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Build sdist
        run: |
          python -m pip install build
          python -m build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

      - uses: softprops/action-gh-release@v1
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        with:
          files: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_archs, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.8.8
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          # To test
          # password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          # repository_url: https://test.pypi.org/legacy/
